{"ast":null,"code":"var _jsxFileName = \"D:\\\\budget plannner fullstack project\\\\budget planner frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchTransactions();\n    fetchCategories();\n  }, []);\n  const fetchTransactions = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/transactions');\n      setTransactions(response.data);\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/categories');\n      setCategories(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n      setLoading(false);\n    }\n  };\n  const getCategoryName = categoryId => {\n    const category = categories.find(cat => cat.id === categoryId);\n    return category ? category.name : 'Unknown';\n  };\n  const calculateTotal = type => {\n    return transactions.filter(t => {\n      const category = categories.find(cat => cat.id === t.category_id);\n      return category && category.type === type;\n    }).reduce((sum, t) => sum + parseFloat(t.amount), 0);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Budget Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card income\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"amount\",\n          children: [\"$\", calculateTotal('income').toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card expense\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"amount\",\n          children: [\"$\", Math.abs(calculateTotal('expense')).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card balance\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"amount\",\n          children: [\"$\", (calculateTotal('income') + calculateTotal('expense')).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recent-transactions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-list\",\n        children: transactions.slice(0, 5).map(transaction => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transaction-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"description\",\n              children: transaction.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category\",\n              children: getCategoryName(transaction.category_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transaction-amount\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: parseFloat(transaction.amount) >= 0 ? 'positive' : 'negative',\n              children: [\"$\", parseFloat(transaction.amount).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: new Date(transaction.transaction_date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"ADeTTujZS0KW9XqIG3cQByhu8lE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","transactions","setTransactions","categories","setCategories","loading","setLoading","fetchTransactions","fetchCategories","response","get","data","error","console","getCategoryName","categoryId","category","find","cat","id","name","calculateTotal","type","filter","t","category_id","reduce","sum","parseFloat","amount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","Math","abs","slice","map","transaction","description","Date","transaction_date","toLocaleDateString","_c","$RefreshReg$"],"sources":["D:/budget plannner fullstack project/budget planner frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Dashboard.css';\r\n\r\nfunction Dashboard() {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchTransactions();\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const fetchTransactions = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/transactions');\r\n      setTransactions(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching transactions:', error);\r\n    }\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/categories');\r\n      setCategories(response.data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching categories:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getCategoryName = (categoryId) => {\r\n    const category = categories.find(cat => cat.id === categoryId);\r\n    return category ? category.name : 'Unknown';\r\n  };\r\n\r\n  const calculateTotal = (type) => {\r\n    return transactions\r\n      .filter(t => {\r\n        const category = categories.find(cat => cat.id === t.category_id);\r\n        return category && category.type === type;\r\n      })\r\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1>Budget Dashboard</h1>\r\n      \r\n      <div className=\"summary-cards\">\r\n        <div className=\"card income\">\r\n          <h3>Total Income</h3>\r\n          <p className=\"amount\">${calculateTotal('income').toFixed(2)}</p>\r\n        </div>\r\n        <div className=\"card expense\">\r\n          <h3>Total Expenses</h3>\r\n          <p className=\"amount\">${Math.abs(calculateTotal('expense')).toFixed(2)}</p>\r\n        </div>\r\n        <div className=\"card balance\">\r\n          <h3>Balance</h3>\r\n          <p className=\"amount\">${(calculateTotal('income') + calculateTotal('expense')).toFixed(2)}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"recent-transactions\">\r\n        <h2>Recent Transactions</h2>\r\n        <div className=\"transaction-list\">\r\n          {transactions.slice(0, 5).map(transaction => (\r\n            <div key={transaction.id} className=\"transaction-item\">\r\n              <div className=\"transaction-info\">\r\n                <span className=\"description\">{transaction.description}</span>\r\n                <span className=\"category\">{getCategoryName(transaction.category_id)}</span>\r\n              </div>\r\n              <div className=\"transaction-amount\">\r\n                <span className={parseFloat(transaction.amount) >= 0 ? 'positive' : 'negative'}>\r\n                  ${parseFloat(transaction.amount).toFixed(2)}\r\n                </span>\r\n                <span className=\"date\">{new Date(transaction.transaction_date).toLocaleDateString()}</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdY,iBAAiB,CAAC,CAAC;IACnBC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,wCAAwC,CAAC;MAC1ER,eAAe,CAACO,QAAQ,CAACE,IAAI,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAMJ,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,sCAAsC,CAAC;MACxEN,aAAa,CAACK,QAAQ,CAACE,IAAI,CAAC;MAC5BL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMQ,eAAe,GAAIC,UAAU,IAAK;IACtC,MAAMC,QAAQ,GAAGb,UAAU,CAACc,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKJ,UAAU,CAAC;IAC9D,OAAOC,QAAQ,GAAGA,QAAQ,CAACI,IAAI,GAAG,SAAS;EAC7C,CAAC;EAED,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC/B,OAAOrB,YAAY,CAChBsB,MAAM,CAACC,CAAC,IAAI;MACX,MAAMR,QAAQ,GAAGb,UAAU,CAACc,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKK,CAAC,CAACC,WAAW,CAAC;MACjE,OAAOT,QAAQ,IAAIA,QAAQ,CAACM,IAAI,KAAKA,IAAI;IAC3C,CAAC,CAAC,CACDI,MAAM,CAAC,CAACC,GAAG,EAAEH,CAAC,KAAKG,GAAG,GAAGC,UAAU,CAACJ,CAAC,CAACK,MAAM,CAAC,EAAE,CAAC,CAAC;EACtD,CAAC;EAED,IAAIxB,OAAO,EAAE;IACX,oBAAOP,OAAA;MAAKgC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClD;EAEA,oBACErC,OAAA;IAAKgC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjC,OAAA;MAAAiC,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzBrC,OAAA;MAAKgC,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BjC,OAAA;QAAKgC,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BjC,OAAA;UAAAiC,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBrC,OAAA;UAAGgC,SAAS,EAAC,QAAQ;UAAAC,QAAA,GAAC,GAAC,EAACV,cAAc,CAAC,QAAQ,CAAC,CAACe,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,eACNrC,OAAA;QAAKgC,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BjC,OAAA;UAAAiC,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBrC,OAAA;UAAGgC,SAAS,EAAC,QAAQ;UAAAC,QAAA,GAAC,GAAC,EAACM,IAAI,CAACC,GAAG,CAACjB,cAAc,CAAC,SAAS,CAAC,CAAC,CAACe,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC,eACNrC,OAAA;QAAKgC,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BjC,OAAA;UAAAiC,QAAA,EAAI;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBrC,OAAA;UAAGgC,SAAS,EAAC,QAAQ;UAAAC,QAAA,GAAC,GAAC,EAAC,CAACV,cAAc,CAAC,QAAQ,CAAC,GAAGA,cAAc,CAAC,SAAS,CAAC,EAAEe,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENrC,OAAA;MAAKgC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCjC,OAAA;QAAAiC,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BrC,OAAA;QAAKgC,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAC9B9B,YAAY,CAACsC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAACC,WAAW,iBACvC3C,OAAA;UAA0BgC,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBACpDjC,OAAA;YAAKgC,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/BjC,OAAA;cAAMgC,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAEU,WAAW,CAACC;YAAW;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9DrC,OAAA;cAAMgC,SAAS,EAAC,UAAU;cAAAC,QAAA,EAAEjB,eAAe,CAAC2B,WAAW,CAAChB,WAAW;YAAC;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzE,CAAC,eACNrC,OAAA;YAAKgC,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCjC,OAAA;cAAMgC,SAAS,EAAEF,UAAU,CAACa,WAAW,CAACZ,MAAM,CAAC,IAAI,CAAC,GAAG,UAAU,GAAG,UAAW;cAAAE,QAAA,GAAC,GAC7E,EAACH,UAAU,CAACa,WAAW,CAACZ,MAAM,CAAC,CAACO,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC,eACPrC,OAAA;cAAMgC,SAAS,EAAC,MAAM;cAAAC,QAAA,EAAE,IAAIY,IAAI,CAACF,WAAW,CAACG,gBAAgB,CAAC,CAACC,kBAAkB,CAAC;YAAC;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxF,CAAC;QAAA,GAVEM,WAAW,CAACtB,EAAE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWnB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnC,EAAA,CAxFQD,SAAS;AAAA+C,EAAA,GAAT/C,SAAS;AA0FlB,eAAeA,SAAS;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}